name: Publish Website

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  STAGING_STORAGE_CONTAINER: "$web"
  STAGING_STORAGE_ACCOUNT: "rexsierrasoftworksbeta"
  STAGING_CDN_RESOURCEGROUP: app-rex
  STAGING_HEALTHCHECK: "https://rex-staging.sierrasoftworks.com/"

  LIVE_STORAGE_CONTAINER: "$web"
  LIVE_STORAGE_ACCOUNT: "sierrasoftworksrex"
  LIVE_CDN_RESOURCEGROUP: app-rex
  LIVE_HEALTHCHECK: "https://rex.sierrasoftworks.com/"
  

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3.0.2
      with:
        submodules: true

    - name: Install Node.js
      uses: actions/setup-node@v2.3.0
    
    - run: npm install

    - run: npm run build --if-present

    - name: Upload Artifact for Website
      uses: actions/upload-artifact@v2
      with:
        # Artifact name
        name: site
        # A file, directory or wildcard pattern that describes what to upload
        path: ./src

  deploy-staging:
    runs-on: ubuntu-latest
    needs: [build]
    environment:
      name: Staging
      url: ${{ env.STAGING_HEALTHCHECK }}
    
    steps:
      - name: Download Artifacts for Website
        uses: actions/download-artifact@v2
        with:
          name: site
          path: ./out
          
      - name: Login to Azure
        uses: azure/login@v1.3.0
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          
      - name: Copy Artifacts to Storage
        uses: azure/CLI@1.0.4
        with:
          inlineScript: |
            echo "Uploading Site Contents"
            az storage blob sync --container '${{ env.STAGING_STORAGE_CONTAINER }}' --account-name ${{ env.STAGING_STORAGE_ACCOUNT }} --source ./out
            
  healthcheck-staging:
    needs: deploy-staging
    runs-on: ubuntu-20.04
    
    steps:
      - name: Probe
        uses: Jtalk/url-health-check-action@1.5
        with:
          url: ${{ env.STAGING_HEALTHCHECK }}
          max-attempts: 5
          retry-delay: 10s
          follow-redirect: true

  deploy-live:
    runs-on: ubuntu-latest
    needs: healthcheck-staging
    if: github.event_name == 'push'
    environment:
      name: Production
      url: ${{ env.LIVE_HEALTHCHECK }}
    
    steps:
      - name: Download Artifacts for Website
        uses: actions/download-artifact@v2
        with:
          name: site
          path: ./out
          
      - name: Login to Azure
        uses: azure/login@v1.3.0
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          
      - name: Copy Artifacts to Storage
        uses: azure/CLI@1.0.4
        with:
          inlineScript: |
            echo "Uploading Site Contents"
            az storage blob sync --container '${{ env.LIVE_STORAGE_CONTAINER }}' --account-name ${{ env.LIVE_STORAGE_ACCOUNT }} --source ./out
            
  healthcheck-live:
    needs: deploy-live
    runs-on: ubuntu-20.04
    
    steps:
      - name: Probe
        uses: Jtalk/url-health-check-action@1.5
        with:
          url: ${{ env.LIVE_HEALTHCHECK }}
          max-attempts: 5
          retry-delay: 10s
          follow-redirect: true
